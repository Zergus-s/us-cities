{"version":3,"sources":["features/users-list/views/UsersListStyles.module.scss","features/shared/components/Button.jsx","features/shared/components/FormInput.jsx","features/auth/views/UserLogin.jsx","features/auth/views/UserSignUp.jsx","features/cities/views/Cities.jsx","features/cities/views/CitiesAdmin.jsx","features/users-list/components/User.jsx","API/index.js","features/users-list/redux/UsersSlice.jsx","features/users-list/views/UsersList.jsx","features/routing/Routes.jsx","features/navbar/NavBar.jsx","App.js","features/cities/redux/CitiesSlice.jsx","app/store.js","index.js","features/users-list/components/UserStyle.module.scss","features/navbar/NavBar.module.scss","features/auth/views/FormStyle.module.scss","App.module.scss"],"names":["module","exports","Button","route","buttonText","styles","onClick","disabled","type","className","to","FormInput","handleChange","name","text","handleBlur","values","touched","errors","placeholder","htmlFor","onChange","onBlur","value","UserLogin","validationSchema","yup","shape","email","required","password","min","style","margin","form","initialValues","validateOnBlur","onSubmit","console","log","isValid","handleSubmit","dirty","error","navItem","UserSignUp","confirmPassword","when","is","val","length","then","oneOf","imgURL","url","Cities","useSelector","state","characters","status","CitiesAdmin","dispatch","useDispatch","useEffect","User","item","userWrapper","thumb","src","imageUrl","alt","info","visited","citiesVisited","total","citiesTotal","instance","axios","create","baseURL","process","fetchUsers","createAsyncThunk","a","get","response","data","UsersSlice","createSlice","initialState","users","reducers","extraReducers","pending","fulfilled","action","payload","rejected","message","UsersList","userList","map","id","RoutePath","Routes","path","component","NavBar","navbarContainer","banner","App","header","main","CitiesSlice","store","configureStore","reducer","combineReducers","cities","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfe9fd72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listcontainer\":\"UsersListStyles_listcontainer__3qB-o\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Button = ({\r\n  route = '',\r\n  buttonText,\r\n  styles,\r\n  onClick = null,\r\n  disabled,\r\n  type,\r\n}) => {\r\n  return (\r\n    <NavLink\r\n      className={styles}\r\n      to={route}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      type={type}\r\n    >\r\n      {buttonText}\r\n    </NavLink>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function FormInput({\r\n  handleChange,\r\n  name,\r\n  text,\r\n  handleBlur,\r\n  values,\r\n  touched,\r\n  errors,\r\n  styles,\r\n  placeholder,\r\n}) {\r\n  return (\r\n    <div>\r\n      <label htmlFor={name}>{text}</label>\r\n      <input\r\n        placeholder={placeholder}\r\n        type=\"text\"\r\n        className=\"input\"\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        value={values}\r\n      />\r\n      {touched && errors && <p className={styles}>{errors}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Button } from '../../shared/components/Button';\r\nimport styles from './FormStyle.module.scss';\r\nimport FormInput from '../../shared/components/FormInput';\r\n\r\nexport const UserLogin = () => {\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email('Must be valid email')\r\n      .required('Enter valid email'),\r\n    password: yup.string().required('Enter password').min(5),\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: 'auto' }}>\r\n      <h1>Login</h1>\r\n      <div className={styles.form}>\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          validateOnBlur\r\n          onSubmit={(values) => console.log('submit', values)}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty,\r\n          }) => (\r\n            <div>\r\n              <div className={styles.form}>\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'email'}\r\n                  text={'Email'}\r\n                  placeholder={'Enter Email'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.email}\r\n                  touched={touched.email}\r\n                  errors={errors.email}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'password'}\r\n                  text={'Password'}\r\n                  placeholder={'Enter Password'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.password}\r\n                  touched={touched.password}\r\n                  errors={errors.password}\r\n                  styles={styles.error}\r\n                />\r\n                <Button\r\n                  styles={styles.navItem}\r\n                  onClick={handleSubmit}\r\n                  buttonText={'SUBMIT'}\r\n                  disabled={!isValid && !dirty}\r\n                  type={'submit'}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Button } from '../../shared/components/Button';\r\nimport styles from './FormStyle.module.scss';\r\nimport FormInput from '../../shared/components/FormInput';\r\n\r\nexport const UserSignUp = () => {\r\n  const validationSchema = yup.object().shape({\r\n    email: yup.string().email().required('Enter valid email'),\r\n    password: yup.string().required('Enter password').min(5),\r\n    confirmPassword: yup\r\n      .string()\r\n      .when('password', {\r\n        is: (val) => (val && val.length > 0 ? true : false),\r\n        then: yup\r\n          .string()\r\n          .oneOf([yup.ref('password')], 'Both password need to be the same'),\r\n      })\r\n      .min(5),\r\n    name: yup.string().required().min(1),\r\n    imgURL: yup.string().required('Enter valid URL').url(),\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: 'auto' }}>\r\n      <h1>Sign Up</h1>\r\n      <div className={styles.form}>\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            name: '',\r\n            imgURL: '',\r\n          }}\r\n          validateOnBlur\r\n          onSubmit={(values) => console.log('submit', values)}\r\n          validationSchema={validationSchema}\r\n          values\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty,\r\n          }) => (\r\n            <div>\r\n              <div className={styles.form}>\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'email'}\r\n                  text={'Email'}\r\n                  placeholder={'Enter Email'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.email}\r\n                  touched={touched.email}\r\n                  errors={errors.email}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'password'}\r\n                  text={'Password'}\r\n                  placeholder={'Enter Password'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.password}\r\n                  touched={touched.password}\r\n                  errors={errors.password}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'confirmPassword'}\r\n                  text={'Confirm Password'}\r\n                  placeholder={'Enter Password'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.confirmPassword}\r\n                  touched={touched.confirmPassword}\r\n                  errors={errors.confirmPassword}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'name'}\r\n                  text={'Name'}\r\n                  placeholder={'Enter Name'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.name}\r\n                  touched={touched.name}\r\n                  errors={errors.name}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'imgURL'}\r\n                  text={'Image URL'}\r\n                  placeholder={'Enter Image URL'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.imgURL}\r\n                  touched={touched.imgURL}\r\n                  errors={errors.imgURL}\r\n                  styles={styles.error}\r\n                />\r\n                <Button\r\n                  styles={styles.navItem}\r\n                  onClick={handleSubmit}\r\n                  buttonText={'SUBMIT'}\r\n                  disabled={!isValid && !dirty}\r\n                  type={'submit'}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nexport default function Cities() {\r\n  const { status } = useSelector((state) => state.characters);\r\n\r\n  switch (status) {\r\n    case 'failed':\r\n      console.error();\r\n      break;\r\n    case 'loading':\r\n      return <h1>Loading</h1>;\r\n    case 'success':\r\n      return (\r\n        <div>\r\n          <h2>Cities</h2>\r\n        </div>\r\n      );\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nexport default function CitiesAdmin() {\r\n  const { characters, status } = useSelector((state) => state.characters);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(console.log('запрос данных'));\r\n  }, []);\r\n\r\n  switch (status) {\r\n    case 'failed':\r\n      console.error();\r\n      break;\r\n    case 'loading':\r\n      return <h1>Loading</h1>;\r\n    case 'success':\r\n      return (\r\n        <div>\r\n          <h2>CitiesAdmin</h2>\r\n        </div>\r\n      );\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport styles from './UserStyle.module.scss';\r\n\r\nfunction User({ item }) {\r\n  return (\r\n    <div className={styles.userWrapper}>\r\n      <div className={styles.thumb}>\r\n        <img src={item.imageUrl} alt={item.name} />\r\n      </div>\r\n      <div className={styles.info}>\r\n        <div className={styles.name}>{item.name}</div>\r\n        <span>\r\n          Cities visited:\r\n          <span className={styles.visited}>{item.citiesVisited}</span>\r\n        </span>\r\n        <span>\r\n          Cities total: <span className={styles.total}>{item.citiesTotal}</span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nexport default instance;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from '../../../API/index';\r\n\r\nexport const fetchUsers = createAsyncThunk(\r\n  'characters/getCharacters',\r\n  async () => {\r\n    const response = await axios.get('users');\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const UsersSlice = createSlice({\r\n  name: 'users',\r\n  initialState: { users: [], status: '' },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchUsers.pending]: (state) => {\r\n      state.status = 'loading';\r\n    },\r\n    [fetchUsers.fulfilled]: (state, action) => {\r\n      state.users = action.payload;\r\n      state.status = 'success';\r\n    },\r\n    [fetchUsers.rejected]: (state, action) => {\r\n      state.status = 'failed';\r\n      console.error(action.error.message, 'characters');\r\n    },\r\n  },\r\n});\r\n\r\nexport default UsersSlice.reducer;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport User from '../components/User';\r\nimport { fetchUsers } from '../redux/UsersSlice';\r\n\r\nimport styles from './UsersListStyles.module.scss';\r\n\r\nexport default function UsersList() {\r\n  const { status, users } = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n  const userList = users.users;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, []);\r\n\r\n  switch (status) {\r\n    case 'failed':\r\n      console.error();\r\n      break;\r\n    case 'loading':\r\n      return <h1>Loading</h1>;\r\n    case 'success':\r\n      return (\r\n        <div>\r\n          <h1>Users</h1>\r\n          <div>\r\n            {userList.map((item) => (\r\n              <User item={item} key={item.id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { UserLogin } from '../auth/views/UserLogin';\r\nimport { UserSignUp } from '../auth/views/UserSignUp';\r\nimport Cities from '../cities/views/Cities';\r\nimport CitiesAdmin from '../cities/views/CitiesAdmin';\r\nimport UsersList from '../users-list/views/UsersList';\r\n\r\nexport const RoutePath = {\r\n  USERS: '/users',\r\n  USERS_LOGIN: '/users/login',\r\n  USERS_SIGN_UP: '/users/signup',\r\n  CITIES: '/cities',\r\n  CITIES_ADMIN: '/cities/admin',\r\n};\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path={RoutePath.USERS_LOGIN} component={UserLogin} />\r\n      <Route path={RoutePath.USERS_SIGN_UP} component={UserSignUp} />\r\n      <Route path={RoutePath.CITIES_ADMIN} component={CitiesAdmin} />\r\n      <Route path={RoutePath.CITIES} component={Cities} />\r\n      <Route path={RoutePath.USERS} component={UsersList} />\r\n      <Redirect to={RoutePath.USERS} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\n\r\nimport styles from './NavBar.module.scss';\r\nimport { RoutePath } from '../routing/Routes';\r\nimport { Button } from '../shared/components/Button';\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <nav className={styles.navbarContainer}>\r\n      <div className={styles.banner}>US CITIES</div>\r\n      <div>\r\n        <Button\r\n          styles={styles.navItem}\r\n          route={RoutePath.USERS_LOGIN}\r\n          buttonText={'LOGIN'}\r\n        />\r\n        <Button\r\n          styles={styles.navItem}\r\n          route={RoutePath.USERS_SIGN_UP}\r\n          buttonText={'SIGN UP'}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\n\nimport NavBar from './features/navbar/NavBar';\nimport Routes from './features/routing/Routes';\n\nimport styles from './App.module.scss';\n\nfunction App() {\n  return (\n    <>\n      <header className={styles.header}>\n        <NavBar />\n      </header>\n      <main className={styles.main}>\n        <Routes />\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const CitiesSlice = createSlice({\r\n  name: 'characters',\r\n  initialState: { characters: [], status: null },\r\n  reducers: {},\r\n});\r\n\r\nexport default CitiesSlice.reducer;\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport CitiesSlice from '../features/cities/redux/CitiesSlice';\nimport UsersSlice from '../features/users-list/redux/UsersSlice';\n\nexport const store = configureStore({\n  reducer: combineReducers({ users: UsersSlice, cities: CitiesSlice }),\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"UserStyle_userWrapper__1X3es\",\"thumb\":\"UserStyle_thumb__3v7e2\",\"info\":\"UserStyle_info__1bA6k\",\"name\":\"UserStyle_name__plv6O\",\"visited\":\"UserStyle_visited__tpOu7\",\"total\":\"UserStyle_total__1CCCs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"NavBar_navbarContainer__3Hy5w\",\"banner\":\"NavBar_banner__2I_X7\",\"navItem\":\"NavBar_navItem__3oKDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormStyle_form__1QHUt\",\"error\":\"FormStyle_error__3BWoy\",\"navItem\":\"FormStyle_navItem__1iH07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__Yc8Ft\"};"],"sourceRoot":""}