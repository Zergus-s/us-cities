{"version":3,"sources":["features/auth/views/FormStyle.module.scss","features/admin/forms/Modal.module.scss","features/cities/components/cityStyle.module.scss","features/cities/redux/citiesSlice.jsx","features/users-list/redux/usersSlice.jsx","API/index.js","features/cities/redux/citiesSagas.js","features/users-list/redux/usersSagas.js","app/rootSaga.js","app/store.js","features/shared/components/Checkbox.jsx","features/shared/components/Select.jsx","features/shared/components/FormInput.jsx","features/admin/forms/Modal.jsx","features/shared/hooks/useModal.js","features/admin/views/CitiesAdmin.jsx","features/shared/components/Button.jsx","features/auth/views/UserLogin.jsx","features/auth/views/UserSignUp.jsx","features/cities/components/City.jsx","features/cities/views/Cities.jsx","features/users-list/components/User.jsx","features/users-list/views/UsersList.jsx","features/routing/Routes.jsx","features/navbar/views/NavBar.jsx","App.js","index.js","features/navbar/views/NavBar.module.scss","features/admin/views/AdminStyles.module.scss","features/users-list/components/UserStyle.module.scss","App.module.scss"],"names":["module","exports","citiesSlice","createSlice","name","initialState","states","cities","loading","error","reducers","fetchCities","state","fetchStates","setCities","action","payload","setStates","setError","updateCityStatus","createCity","deleteCity","updateCity","usersSlice","users","authData","data","JSON","parse","localStorage","getItem","Date","now","time","clear","token","userId","getTokenFromLocalStorage","fetchUsers","logOut","logIn","signUp","setUsers","setToken","setItem","stringify","instance","axios","create","baseURL","process","deleteCitySaga","createCitySaga","updateCityStatusSaga","updateCitySaga","fetchStatesSaga","fetchCitiesSaga","citiesWatcher","select","call","delete","headers","Authorization","put","actions","post","values","stateId","population","imageUrl","imageURL","visited","close","id","get","response","message","takeLatest","fetchUsersSaga","loginSaga","signUpSaga","usersWatcher","confirmPassword","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","combineReducers","middleware","run","Checkbox","handleChange","text","handleBlur","touched","errors","styles","placeholder","type","console","log","className","checkbox","checkboxInput","onChange","onBlur","htmlFor","Select","formGroup","formControl","value","map","option","FormInput","inputContainer","modalNode","document","querySelector","Modal","isOpen","onClose","inputs","useSelector","dispatch","useDispatch","validationSchema","yup","shape","required","positive","url","ReactDOM","createPortal","backDrop","onClick","e","target","modal","initialValues","validateOnBlur","onSubmit","find","item","isValid","handleSubmit","dirty","form","modalHead","button","disabled","useModal","useState","isModalOpen","setIsModalOpen","setModalProps","closeModal","openModal","args","renderModal","CitiesAdmin","city","setCity","useEffect","wrapper","container","Button","route","buttonText","to","UserLogin","email","password","min","style","margin","RoutePath","CITIES","navItem","UserSignUp","when","is","val","length","then","oneOf","City","userWrapper","thumb","src","alt","info","toString","replace","hiddenButton","handleClickVisited","Cities","User","citiesVisited","total","citiesTotal","UsersList","USERS","USERS_LOGIN","USERS_SIGN_UP","CITIES_ADMIN","Routes","isAuthorized","path","component","NavBar","navbarContainer","banner","App","header","main","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89379e89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormStyle_form__1QHUt\",\"error\":\"FormStyle_error__3BWoy\",\"navItem\":\"FormStyle_navItem__1iH07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backDrop\":\"Modal_backDrop__27cKp\",\"modal\":\"Modal_modal__LoBCe\",\"form\":\"Modal_form__2YJBm\",\"checkbox\":\"Modal_checkbox__1Od7Z\",\"formGroup\":\"Modal_formGroup__27m0k\",\"formControl\":\"Modal_formControl__2Xu6H\",\"modalHead\":\"Modal_modalHead__TTgqs\",\"error\":\"Modal_error__2-_LE\",\"button\":\"Modal_button__2Shht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"cityStyle_userWrapper__12KaP\",\"button\":\"cityStyle_button__3dKtw\",\"hiddenButton\":\"cityStyle_hiddenButton__Q6eB8\",\"thumb\":\"cityStyle_thumb__22v_U\",\"info\":\"cityStyle_info__2AUXi\",\"name\":\"cityStyle_name__24NGz\",\"population\":\"cityStyle_population__1Z1_K\",\"state\":\"cityStyle_state__1sTA1\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst citiesSlice = createSlice({\r\n  name: 'cities',\r\n  initialState: { states: [], cities: [], loading: false, error: null },\r\n  reducers: {\r\n    fetchCities: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    fetchStates: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    setCities: (state, action) => {\r\n      state.cities = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    setStates: (state, action) => {\r\n      state.states = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    setError: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    updateCityStatus: () => {},\r\n    createCity: () => {},\r\n    deleteCity: () => {},\r\n    updateCity: () => {},\r\n  },\r\n});\r\n\r\nexport default citiesSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst getTokenFromLocalStorage = () => {\r\n  const data = JSON.parse(localStorage.getItem('tokenData'));\r\n  if (data && Date.now() - +data.time > 3600000) localStorage.clear();\r\n  if (!data)\r\n    return {\r\n      token: '',\r\n      userId: '',\r\n    };\r\n  else return data;\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState: {\r\n    users: [],\r\n    loading: false,\r\n    error: null,\r\n    authData: getTokenFromLocalStorage(),\r\n  },\r\n  reducers: {\r\n    fetchUsers: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    logOut: (state) => {\r\n      state.authData = {};\r\n      localStorage.clear();\r\n    },\r\n\r\n    logIn: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    signUp: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    setUsers: (state, action) => {\r\n      state.users = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n\r\n    setToken: (state, action) => {\r\n      state.authData = action.payload;\r\n      localStorage.setItem(\r\n        'tokenData',\r\n        JSON.stringify({\r\n          token: action.payload.token,\r\n          userId: action.payload.userId,\r\n          time: Date.now(),\r\n        })\r\n      );\r\n    },\r\n    setError: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default usersSlice;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nexport default instance;\r\n","import { takeLatest, call, put, select } from '@redux-saga/core/effects';\r\nimport axios from '../../../API/index';\r\nimport citiesSlice from './citiesSlice';\r\n\r\nfunction* deleteCitySaga({ payload }) {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  yield call(axios.delete, `cities/${payload}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  yield put(citiesSlice.actions.fetchCities());\r\n}\r\n\r\nfunction* createCitySaga({ payload }) {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  yield call(\r\n    axios.post,\r\n    `/cities/`,\r\n    {\r\n      name: payload.values.name,\r\n      stateId: payload.values.stateId,\r\n      population: payload.values.population,\r\n      imageUrl: payload.values.imageURL,\r\n      visited: payload.values.visited ? true : false,\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n  payload.close();\r\n  yield put(citiesSlice.actions.fetchCities());\r\n}\r\n\r\nfunction* updateCityStatusSaga({ payload }) {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  yield call(\r\n    axios.put,\r\n    `/cities/${payload.id}`,\r\n    {\r\n      name: payload.name,\r\n      stateId: payload.state.id,\r\n      population: payload.population,\r\n      imageUrl: payload.imageUrl,\r\n      visited: true,\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n  yield put(citiesSlice.actions.fetchCities());\r\n}\r\n\r\nfunction* updateCitySaga({ payload }) {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  yield call(\r\n    axios.put,\r\n    `/cities/${payload.values.stateId}`,\r\n    {\r\n      name: payload.values.name,\r\n      stateId: payload.values.stateId,\r\n      population: payload.values.population,\r\n      imageUrl: payload.values.imageURL,\r\n      visited: payload.values.visited,\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n  payload.close();\r\n  yield put(citiesSlice.actions.fetchCities());\r\n}\r\n\r\nfunction* fetchStatesSaga() {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  const response = yield call(axios.get, 'cities/states', {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  yield put(citiesSlice.actions.setStates(response.data.states));\r\n}\r\n\r\nfunction* fetchCitiesSaga() {\r\n  try {\r\n    const { userId, token } = yield select((state) => state.users.authData);\r\n    const response = yield call(axios.get, `cities/user/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    yield put(citiesSlice.actions.setCities(response.data.cities));\r\n  } catch (e) {\r\n    yield put(citiesSlice.actions.setError(e.response.data.message));\r\n  }\r\n}\r\n\r\nexport default function* citiesWatcher() {\r\n  yield takeLatest(citiesSlice.actions.fetchCities, fetchCitiesSaga);\r\n  yield takeLatest(citiesSlice.actions.updateCityStatus, updateCityStatusSaga);\r\n  yield takeLatest(citiesSlice.actions.updateCity, updateCitySaga);\r\n  yield takeLatest(citiesSlice.actions.fetchStates, fetchStatesSaga);\r\n  yield takeLatest(citiesSlice.actions.createCity, createCitySaga);\r\n  yield takeLatest(citiesSlice.actions.deleteCity, deleteCitySaga);\r\n}\r\n","import { takeLatest, call, put } from '@redux-saga/core/effects';\r\nimport usersSlice from './usersSlice';\r\nimport axios from '../../../API/index';\r\n\r\nfunction* fetchUsersSaga() {\r\n  try {\r\n    const response = yield call(axios.get, 'users');\r\n    yield put(usersSlice.actions.setUsers(response.data.users));\r\n  } catch (e) {\r\n    yield put(usersSlice.actions.setError(e.response.data.message));\r\n  }\r\n}\r\n\r\nfunction* loginSaga({ payload }) {\r\n  try {\r\n    const response = yield call(axios.post, 'users/login', payload);\r\n    yield put(usersSlice.actions.setToken(response.data));\r\n  } catch (e) {\r\n    yield put(usersSlice.actions.setError(e.response.data.message));\r\n  }\r\n}\r\nfunction* signUpSaga({ payload }) {\r\n  delete payload.confirmPassword;\r\n\r\n  try {\r\n    const response = yield call(axios.post, 'users/signup', payload);\r\n\r\n    yield put(usersSlice.actions.setToken(response.data));\r\n  } catch (e) {\r\n    yield put(usersSlice.actions.setError(e.response.data.message, e.response));\r\n  }\r\n}\r\n\r\nexport default function* usersWatcher() {\r\n  yield takeLatest(usersSlice.actions.fetchUsers, fetchUsersSaga);\r\n  yield takeLatest(usersSlice.actions.logIn, loginSaga);\r\n  yield takeLatest(usersSlice.actions.signUp, signUpSaga);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport citiesWatcher from '../features/cities/redux/citiesSagas';\r\nimport usersWatcher from '../features/users-list/redux/usersSagas';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([usersWatcher(), citiesWatcher()]);\r\n}\r\n","import createSagaMiddleware from '@redux-saga/core';\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport citiesSlice from '../features/cities/redux/citiesSlice';\n\nimport usersSlice from '../features/users-list/redux/usersSlice';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = configureStore({\n  reducer: combineReducers({\n    users: usersSlice.reducer,\n    cities: citiesSlice.reducer,\n  }),\n  middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\r\n\r\nexport default function Checkbox({\r\n  handleChange,\r\n  name,\r\n  text,\r\n  handleBlur,\r\n  values,\r\n  touched,\r\n  errors,\r\n  styles,\r\n  placeholder,\r\n  type = 'text',\r\n}) {\r\n  console.log(values);\r\n  return (\r\n    <div className={styles.checkbox}>\r\n      <input\r\n        placeholder={placeholder}\r\n        type={type}\r\n        className={styles.checkboxInput}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n      />\r\n      <label htmlFor={name}>{text}</label>\r\n      {touched && errors && <p className={styles.error}>{errors}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Select({\r\n  handleChange,\r\n  name,\r\n  text,\r\n  handleBlur,\r\n  values,\r\n  touched,\r\n  errors,\r\n  styles,\r\n  placeholder,\r\n  states,\r\n}) {\r\n  return (\r\n    <div className={styles.formGroup}>\r\n      <label htmlFor={name}>{text}</label>\r\n      <select\r\n        placeholder={placeholder}\r\n        name={name}\r\n        id={name}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        className={styles.formControl}\r\n        value={values}\r\n      >\r\n        <option value=\"\" />\r\n        {states.map((option) => (\r\n          <option key={option.id}>{option.name}</option>\r\n        ))}\r\n      </select>\r\n      {touched && errors && <p className={styles.error}>{errors}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function FormInput({\r\n  handleChange,\r\n  name,\r\n  text,\r\n  handleBlur,\r\n  values,\r\n  touched,\r\n  errors,\r\n  styles,\r\n  placeholder,\r\n  type = 'text',\r\n}) {\r\n  return (\r\n    <div className={styles.inputContainer}>\r\n      <label htmlFor={name}>{text}</label>\r\n      <input\r\n        placeholder={placeholder}\r\n        type={type}\r\n        className=\"input\"\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        value={values}\r\n      />\r\n      {touched && errors && <p className={styles.error}>{errors}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport Checkbox from './../../shared/components/Checkbox';\r\nimport Select from './../../shared/components/Select';\r\n\r\nimport FormInput from '../../shared/components/FormInput';\r\n\r\nimport styles from './Modal.module.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport citiesSlice from '../../cities/redux/citiesSlice';\r\n\r\nconst modalNode = document.querySelector('#modal');\r\n\r\nfunction Modal({ isOpen, onClose, inputs }) {\r\n  const { states } = useSelector((state) => state.cities);\r\n  const dispatch = useDispatch();\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required('Enter name'),\r\n    state: yup.string().required('Choose state'),\r\n    population: yup.number().positive().required('Enter Population'),\r\n    imageURL: yup.string().url().required('Enter imageURL'),\r\n  });\r\n  if (!isOpen) return null;\r\n  const backdropClickHandler = (e) => {\r\n    if (e.target.id === 'modalBackdrop') onClose();\r\n  };\r\n\r\n  const submitCity = (data) => {\r\n    data.stateId = states.find((item) => item.name === data.state).id;\r\n    inputs\r\n      ? dispatch(\r\n          citiesSlice.actions.updateCity({ values: data, close: onClose })\r\n        )\r\n      : dispatch(\r\n          citiesSlice.actions.createCity({ values: data, close: onClose })\r\n        );\r\n  };\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      id=\"modalBackdrop\"\r\n      className={styles.backDrop}\r\n      onClick={backdropClickHandler}\r\n    >\r\n      <div className={styles.modal}>\r\n        (\r\n        <>\r\n          <h1>Login</h1>\r\n\r\n          <Formik\r\n            initialValues={\r\n              inputs\r\n                ? {\r\n                    name: inputs.name,\r\n                    state: inputs.state.name,\r\n                    population: inputs.population,\r\n                    imageURL: inputs.imageUrl,\r\n                    visited: inputs.visited,\r\n                  }\r\n                : {\r\n                    name: '',\r\n                    state: '',\r\n                    population: '',\r\n                    imageURL: '',\r\n                    visited: '',\r\n                  }\r\n            }\r\n            validateOnBlur\r\n            onSubmit={(values) => submitCity(values)}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty,\r\n            }) => (\r\n              <div>\r\n                <div className={styles.form}>\r\n                  <div className={styles.modalHead}>CREATE CITY</div>\r\n                  <FormInput\r\n                    handleChange={handleChange}\r\n                    name={'name'}\r\n                    text={'Name'}\r\n                    placeholder={'Enter Name'}\r\n                    handleBlur={handleBlur}\r\n                    values={values.name}\r\n                    touched={touched.name}\r\n                    errors={errors.name}\r\n                    styles={styles}\r\n                  />\r\n\r\n                  <Select\r\n                    states={states}\r\n                    handleChange={handleChange}\r\n                    name={'state'}\r\n                    text={'State'}\r\n                    type={'select'}\r\n                    placeholder={'Select'}\r\n                    handleBlur={handleBlur}\r\n                    values={values.state}\r\n                    touched={touched.state}\r\n                    errors={errors.state}\r\n                    styles={styles}\r\n                  />\r\n\r\n                  <FormInput\r\n                    handleChange={handleChange}\r\n                    name={'population'}\r\n                    text={'Population'}\r\n                    placeholder={'Enter Population'}\r\n                    handleBlur={handleBlur}\r\n                    values={values.population}\r\n                    touched={touched.population}\r\n                    errors={errors.population}\r\n                    styles={styles}\r\n                  />\r\n                  <FormInput\r\n                    handleChange={handleChange}\r\n                    name={'imageURL'}\r\n                    text={'Image URL'}\r\n                    placeholder={' Image URL'}\r\n                    handleBlur={handleBlur}\r\n                    values={values.imageURL}\r\n                    touched={touched.imageURL}\r\n                    errors={errors.imageURL}\r\n                    styles={styles}\r\n                  />\r\n                  <Checkbox\r\n                    className={styles.checkbox}\r\n                    type={'checkbox'}\r\n                    handleChange={handleChange}\r\n                    name={'visited'}\r\n                    text={'Visited'}\r\n                    handleBlur={handleBlur}\r\n                    values={values.visited}\r\n                    touched={touched.visited}\r\n                    errors={errors.visited}\r\n                    styles={styles}\r\n                  />\r\n                  <button\r\n                    className={styles.button}\r\n                    onClick={() => handleSubmit()}\r\n                    disabled={!isValid && !dirty}\r\n                    type={'submit'}\r\n                  >\r\n                    SUBMIT\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Formik>\r\n        </>\r\n        );\r\n      </div>\r\n    </div>,\r\n    modalNode\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport Modal from '../../admin/forms/Modal';\r\n\r\nfunction useModal() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalProps, setModalProps] = useState([]);\r\n  const openModal = (...args) => {\r\n    setModalProps(args);\r\n    setIsModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalProps([]);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const renderModal = (inputs) => {\r\n    return <Modal isOpen={isModalOpen} onClose={closeModal} inputs={inputs} />;\r\n  };\r\n\r\n  return { openModal, closeModal, renderModal };\r\n}\r\n\r\nexport default useModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport citiesSlice from '../../cities/redux/citiesSlice';\r\nimport useModal from '../../shared/hooks/useModal';\r\nimport styles from './AdminStyles.module.scss';\r\n\r\nconst CitiesAdmin = () => {\r\n  const dispatch = useDispatch();\r\n  const [city, setCity] = useState();\r\n  const { cities } = useSelector((state) => state.cities);\r\n  const { openModal, renderModal } = useModal();\r\n  useEffect(() => {\r\n    dispatch(citiesSlice.actions.fetchCities());\r\n    dispatch(citiesSlice.actions.fetchStates());\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(citiesSlice.actions.deleteCity(id));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1>Admin</h1>\r\n      <div onClick={openModal} className={styles.button}>\r\n        CREATE NEW CITY\r\n      </div>\r\n      {cities.map((item) => (\r\n        <div className={styles.container} key={item.id}>\r\n          <div className={styles.name}>{item.name}</div>\r\n          <div>\r\n            <div\r\n              onClick={() => {\r\n                openModal();\r\n                setCity(item);\r\n              }}\r\n              className={styles.button}\r\n            >\r\n              EDIT\r\n            </div>\r\n            <div\r\n              onClick={() => handleDelete(item.id)}\r\n              className={styles.button}\r\n            >\r\n              DELETE\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {renderModal(city)}\r\n    </div>\r\n  );\r\n};\r\nexport default CitiesAdmin;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Button = ({\r\n  route = '',\r\n  buttonText,\r\n  styles,\r\n  onClick = null,\r\n  disabled,\r\n  type,\r\n}) => {\r\n  return (\r\n    <NavLink\r\n      className={styles}\r\n      to={route}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      type={type}\r\n    >\r\n      {buttonText}\r\n    </NavLink>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport FormInput from '../../shared/components/FormInput';\r\nimport { RoutePath } from '../../routing/Routes';\r\nimport { Button } from '../../shared/components/Button';\r\n\r\nimport styles from './FormStyle.module.scss';\r\nimport usersSlice from '../../users-list/redux/usersSlice';\r\nimport { useDispatch } from 'react-redux';\r\nexport const UserLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email('Must be valid email')\r\n      .required('Enter valid email'),\r\n    password: yup.string().required('Enter password').min(5),\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: 'auto' }}>\r\n      <h1>Login</h1>\r\n      <div className={styles.form}>\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          validateOnBlur\r\n          onSubmit={(values) => dispatch(usersSlice.actions.logIn(values))}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty,\r\n          }) => (\r\n            <div>\r\n              <div className={styles.form}>\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'email'}\r\n                  text={'Email'}\r\n                  placeholder={'Enter Email'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.email}\r\n                  touched={touched.email}\r\n                  errors={errors.email}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'password'}\r\n                  text={'Password'}\r\n                  placeholder={'Enter Password'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.password}\r\n                  touched={touched.password}\r\n                  errors={errors.password}\r\n                  styles={styles.error}\r\n                />\r\n                <Button\r\n                  route={RoutePath.CITIES}\r\n                  styles={styles.navItem}\r\n                  onClick={() => handleSubmit()}\r\n                  buttonText={'SUBMIT'}\r\n                  disabled={!isValid && !dirty}\r\n                  type={'submit'}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Button } from '../../shared/components/Button';\r\nimport FormInput from '../../shared/components/FormInput';\r\nimport { RoutePath } from '../../routing/Routes';\r\nimport usersSlice from '../../users-list/redux/usersSlice';\r\n\r\nimport styles from './FormStyle.module.scss';\r\nexport const UserSignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const validationSchema = yup.object().shape({\r\n    email: yup.string().email().required('Enter valid email'),\r\n    password: yup.string().required('Enter password').min(5),\r\n    confirmPassword: yup\r\n      .string()\r\n      .when('password', {\r\n        is: (val) => (val && val.length > 0 ? true : false),\r\n        then: yup\r\n          .string()\r\n          .oneOf([yup.ref('password')], 'Both password need to be the same'),\r\n      })\r\n      .required('Enter password confirmation'),\r\n    name: yup.string().required().min(1),\r\n    imageUrl: yup.string().required('Enter valid URL').url(),\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: 'auto' }}>\r\n      <h1>Sign Up</h1>\r\n      <div className={styles.form}>\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            name: '',\r\n            imageUrl: '',\r\n          }}\r\n          validateOnBlur\r\n          onSubmit={(values) => dispatch(usersSlice.actions.signUp(values))}\r\n          validationSchema={validationSchema}\r\n          values\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty,\r\n          }) => (\r\n            <div>\r\n              <div className={styles.form}>\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'email'}\r\n                  text={'Email'}\r\n                  placeholder={'Enter Email'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.email}\r\n                  touched={touched.email}\r\n                  errors={errors.email}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'password'}\r\n                  text={'Password'}\r\n                  placeholder={'Enter Password'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.password}\r\n                  touched={touched.password}\r\n                  errors={errors.password}\r\n                  styles={styles.error}\r\n                  type={'password'}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'confirmPassword'}\r\n                  text={'Confirm Password'}\r\n                  placeholder={'Enter Password'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.confirmPassword}\r\n                  touched={touched.confirmPassword}\r\n                  errors={errors.confirmPassword}\r\n                  styles={styles.error}\r\n                  type={'password'}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'name'}\r\n                  text={'Name'}\r\n                  placeholder={'Enter Name'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.name}\r\n                  touched={touched.name}\r\n                  errors={errors.name}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'imageUrl'}\r\n                  text={'Image URL'}\r\n                  placeholder={'Enter Image URL'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.imageUrl}\r\n                  touched={touched.imageUrl}\r\n                  errors={errors.imageUrl}\r\n                  styles={styles.error}\r\n                />\r\n                <Button\r\n                  route={RoutePath.CITIES}\r\n                  styles={styles.navItem}\r\n                  onClick={() => handleSubmit()}\r\n                  buttonText={'SUBMIT'}\r\n                  disabled={!isValid && !dirty}\r\n                  type={'submit'}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport citiesSlice from '../redux/citiesSlice';\r\n\r\nimport styles from './cityStyle.module.scss';\r\n\r\nfunction City({ item }) {\r\n  const dispatch = useDispatch();\r\n  const handleClickVisited = (item) => {\r\n    const city = { ...item };\r\n    city.visited = true;\r\n    dispatch(citiesSlice.actions.updateCityStatus(item));\r\n  };\r\n  return (\r\n    <div className={styles.userWrapper}>\r\n      <div className={styles.thumb}>\r\n        <img src={item.imageUrl} alt={item.name} />\r\n      </div>\r\n      <div className={styles.info}>\r\n        <div className={styles.name}>{item.name}</div>\r\n        <span>\r\n          State:\r\n          <span className={styles.state}>{item.state.name}</span>\r\n        </span>\r\n        <span>\r\n          Population:{' '}\r\n          <span className={styles.population}>\r\n            {item.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <div\r\n        className={\r\n          !item.visited\r\n            ? styles.button\r\n            : `${styles.button} ${styles.hiddenButton}`\r\n        }\r\n        disabled={false}\r\n        onClick={() => handleClickVisited(item)}\r\n      >\r\n        {item.visited ? 'VISITED' : 'MAKE VISITED'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default City;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport City from '../components/City';\r\nimport citiesSlice from '../redux/citiesSlice';\r\n\r\nexport default function Cities() {\r\n  const { loading, error, cities } = useSelector((state) => state.cities);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(citiesSlice.actions.fetchCities());\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Cities</h1>\r\n      <div>\r\n        {cities.map((item) => (\r\n          <City item={item} key={item.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport styles from './UserStyle.module.scss';\r\n\r\nfunction User({ item }) {\r\n  return (\r\n    <div className={styles.userWrapper}>\r\n      <div className={styles.thumb}>\r\n        <img src={item.imageUrl} alt={item.name} />\r\n      </div>\r\n      <div className={styles.info}>\r\n        <div className={styles.name}>{item.name}</div>\r\n        <span>\r\n          Cities visited:\r\n          <span className={styles.visited}>{item.citiesVisited}</span>\r\n        </span>\r\n        <span>\r\n          Cities total: <span className={styles.total}>{item.citiesTotal}</span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport User from '../components/User';\r\nimport usersSlice from '../redux/usersSlice';\r\n\r\nexport default function UsersList() {\r\n  const { loading, error, users } = useSelector((state) => state.users);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(usersSlice.actions.fetchUsers());\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      <div>\r\n        {users.map((item) => (\r\n          <User item={item} key={item.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport CitiesAdmin from '../admin/views/CitiesAdmin';\r\nimport { UserLogin } from '../auth/views/UserLogin';\r\nimport { UserSignUp } from '../auth/views/UserSignUp';\r\nimport Cities from '../cities/views/Cities';\r\n\r\nimport UsersList from '../users-list/views/UsersList';\r\n\r\nexport const RoutePath = {\r\n  USERS: '/users',\r\n  USERS_LOGIN: '/users/login',\r\n  USERS_SIGN_UP: '/users/signup',\r\n  CITIES: '/cities',\r\n  CITIES_ADMIN: '/cities/admin',\r\n};\r\n\r\nfunction Routes({ isAuthorized }) {\r\n  if (isAuthorized)\r\n    return (\r\n      <Switch>\r\n        <Route path={RoutePath.CITIES_ADMIN} component={CitiesAdmin} />\r\n        <Route path={RoutePath.CITIES} component={Cities} />\r\n        <Redirect to={RoutePath.CITIES} />\r\n      </Switch>\r\n    );\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={RoutePath.USERS_LOGIN} component={UserLogin} />\r\n      <Route path={RoutePath.USERS_SIGN_UP} component={UserSignUp} />\r\n      <Route path={RoutePath.USERS} component={UsersList} />\r\n      <Redirect to={RoutePath.USERS} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\n\r\nimport usersSlice from '../../users-list/redux/usersSlice';\r\nimport { RoutePath } from '../../routing/Routes';\r\nimport { Button } from '../../shared/components/Button';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport styles from './NavBar.module.scss';\r\n\r\nexport default function NavBar({ isAuthorized }) {\r\n  const dispatch = useDispatch();\r\n  const handleResetAutorisation = () => {\r\n    dispatch(usersSlice.actions.logOut());\r\n  };\r\n  return (\r\n    <nav className={styles.navbarContainer}>\r\n      <div className={styles.banner}>US CITIES</div>\r\n      <div>\r\n        {!isAuthorized && (\r\n          <>\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={RoutePath.USERS_LOGIN}\r\n              buttonText={'LOGIN'}\r\n            />\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={RoutePath.USERS_SIGN_UP}\r\n              buttonText={'SIGN UP'}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {isAuthorized && (\r\n          <>\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={RoutePath.CITIES}\r\n              buttonText={'CITIES'}\r\n            />\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={RoutePath.CITIES_ADMIN}\r\n              buttonText={'ADMIN'}\r\n            />\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={'sign_out'}\r\n              buttonText={'SIGN OUT'}\r\n              onClick={handleResetAutorisation}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport NavBar from './features/navbar/views/NavBar';\nimport Routes from './features/routing/Routes';\n\nimport styles from './App.module.scss';\n\nfunction App() {\n  const { token } = useSelector((state) => state.users.authData);\n\n  return (\n    <>\n      <header className={styles.header}>\n        <NavBar isAuthorized={!!token} />\n      </header>\n      <main className={styles.main}>\n        <Routes isAuthorized={!!token} />\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"NavBar_navbarContainer__1Zsu9\",\"banner\":\"NavBar_banner__1wa-w\",\"navItem\":\"NavBar_navItem__1wBhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AdminStyles_wrapper__NMkzM\",\"button\":\"AdminStyles_button__1C-hP\",\"container\":\"AdminStyles_container__294Uh\",\"name\":\"AdminStyles_name__2KFt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"UserStyle_userWrapper__1X3es\",\"thumb\":\"UserStyle_thumb__3v7e2\",\"info\":\"UserStyle_info__1bA6k\",\"name\":\"UserStyle_name__plv6O\",\"visited\":\"UserStyle_visited__tpOu7\",\"total\":\"UserStyle_total__1CCCs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__Yc8Ft\"};"],"sourceRoot":""}