{"version":3,"sources":["features/auth/views/FormStyle.module.scss","features/admin/components/Modal.module.scss","features/cities/components/cityStyle.module.scss","features/cities/redux/citiesSlice.jsx","features/users-list/redux/usersSlice.jsx","API/index.js","features/cities/redux/citiesSagas.js","features/users-list/redux/usersSagas.js","app/rootSaga.js","app/store.js","features/shared/components/FormInput.jsx","features/shared/components/Button.jsx","features/auth/views/UserLogin.jsx","features/auth/views/UserSignUp.jsx","features/shared/hooks/useModal.js","features/shared/components/Checkbox.jsx","features/shared/components/Select.jsx","features/admin/components/Modal.jsx","features/admin/views/CitiesAdmin.jsx","features/users-list/components/User.jsx","features/users-list/views/UsersList.jsx","features/cities/components/City.jsx","features/cities/views/Cities.jsx","features/routing/Routes.jsx","features/navbar/views/NavBar.jsx","App.js","index.js","features/navbar/views/NavBar.module.scss","features/admin/views/AdminStyles.module.scss","features/users-list/components/UserStyle.module.scss","features/shared/hooks/useModal.module.scss","App.module.scss"],"names":["module","exports","citiesSlice","createSlice","name","initialState","states","cities","loading","error","reducers","fetchCities","state","fetchStates","setCities","action","payload","setStates","setError","updateCityStatus","createCity","deleteCity","updateCity","usersSlice","users","authData","data","JSON","parse","localStorage","getItem","Date","now","time","clear","token","userId","getTokenFromLocalStorage","fetchUsers","logOut","logIn","signUp","setUsers","setToken","setItem","stringify","instance","axios","create","baseURL","process","deleteCitySaga","createCitySaga","updateCitySaga","updateCityStatusSaga","fetchStatesSaga","fetchCitiesSaga","citiesWatcher","select","call","delete","headers","Authorization","put","actions","post","values","stateId","population","imageUrl","imageURL","visited","close","id","get","response","message","takeLatest","fetchUsersSaga","loginSaga","signUpSaga","usersWatcher","confirmPassword","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","combineReducers","middleware","run","FormInput","handleChange","text","handleBlur","touched","errors","styles","placeholder","type","className","inputContainer","htmlFor","onChange","onBlur","value","Button","route","buttonText","onClick","disabled","to","UserLogin","dispatch","useDispatch","validationSchema","yup","shape","email","required","password","min","style","margin","form","initialValues","validateOnBlur","onSubmit","isValid","handleSubmit","dirty","RoutePath","CITIES","navItem","UserSignUp","when","is","val","length","then","oneOf","url","modalNode","document","querySelector","useModal","useState","isModalOpen","setIsModalOpen","closeModal","backdropClickHandler","e","target","openModal","renderModal","Component","inputs","option","ReactDOM","createPortal","backDrop","modal","onClose","Checkbox","checkbox","checkboxInput","checked","Select","formGroup","formControl","map","Modal","useSelector","positive","item","modalHead","button","CitiesAdmin","city","setCity","setOption","useEffect","wrapper","container","handleEdit","User","userWrapper","thumb","src","alt","info","citiesVisited","total","citiesTotal","UsersList","City","toString","replace","hiddenButton","handleClickVisited","Cities","USERS","USERS_LOGIN","USERS_SIGN_UP","CITIES_ADMIN","Routes","isAuthorized","path","component","NavBar","navbarContainer","banner","App","header","main","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa438a6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormStyle_form__1QHUt\",\"error\":\"FormStyle_error__3BWoy\",\"navItem\":\"FormStyle_navItem__1iH07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Modal_form__2JcDk\",\"modalHead\":\"Modal_modalHead__1OCR9\",\"formGroup\":\"Modal_formGroup__O72H4\",\"formControl\":\"Modal_formControl__t_m6A\",\"error\":\"Modal_error__1nzHH\",\"checkbox\":\"Modal_checkbox__1PM58\",\"button\":\"Modal_button__2pqJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"cityStyle_userWrapper__12KaP\",\"button\":\"cityStyle_button__3dKtw\",\"hiddenButton\":\"cityStyle_hiddenButton__Q6eB8\",\"thumb\":\"cityStyle_thumb__22v_U\",\"info\":\"cityStyle_info__2AUXi\",\"name\":\"cityStyle_name__24NGz\",\"population\":\"cityStyle_population__1Z1_K\",\"state\":\"cityStyle_state__1sTA1\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst citiesSlice = createSlice({\r\n  name: 'cities',\r\n  initialState: { states: [], cities: [], loading: false, error: null },\r\n  reducers: {\r\n    fetchCities: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    fetchStates: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    setCities: (state, action) => {\r\n      state.cities = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    setStates: (state, action) => {\r\n      state.states = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    setError: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    updateCityStatus: () => {},\r\n    createCity: () => {},\r\n    deleteCity: () => {},\r\n    updateCity: () => {},\r\n  },\r\n});\r\n\r\nexport default citiesSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst getTokenFromLocalStorage = () => {\r\n  const data = JSON.parse(localStorage.getItem('tokenData'));\r\n  if (data && Date.now() - +data.time > 3600000) localStorage.clear();\r\n  if (!data)\r\n    return {\r\n      token: '',\r\n      userId: '',\r\n    };\r\n  else return data;\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState: {\r\n    users: [],\r\n    loading: false,\r\n    error: null,\r\n    authData: getTokenFromLocalStorage(),\r\n  },\r\n  reducers: {\r\n    fetchUsers: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    logOut: (state) => {\r\n      state.authData = {};\r\n      localStorage.clear();\r\n    },\r\n\r\n    logIn: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    signUp: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n\r\n    setUsers: (state, action) => {\r\n      state.users = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n\r\n    setToken: (state, action) => {\r\n      state.authData = action.payload;\r\n      localStorage.setItem(\r\n        'tokenData',\r\n        JSON.stringify({\r\n          token: action.payload.token,\r\n          userId: action.payload.userId,\r\n          time: Date.now(),\r\n        })\r\n      );\r\n    },\r\n    setError: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default usersSlice;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nexport default instance;\r\n","import { takeLatest, call, put, select } from '@redux-saga/core/effects';\r\nimport axios from '../../../API/index';\r\n\r\nimport citiesSlice from './citiesSlice';\r\n\r\nfunction* deleteCitySaga({ payload }) {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  yield call(axios.delete, `cities/${payload}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  yield put(citiesSlice.actions.fetchCities());\r\n}\r\n\r\nfunction* createCitySaga({ payload }) {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  yield call(\r\n    axios.post,\r\n    `/cities/`,\r\n    {\r\n      name: payload.values.name,\r\n      stateId: payload.values.stateId,\r\n      population: payload.values.population,\r\n      imageUrl: payload.values.imageURL,\r\n      visited: payload.values.visited ? true : false,\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n  payload.close();\r\n  yield put(citiesSlice.actions.fetchCities());\r\n}\r\n\r\nfunction* updateCitySaga({ payload }) {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  yield call(\r\n    axios.put,\r\n    `/cities/${payload.values.id}`,\r\n    {\r\n      name: payload.values.name,\r\n      stateId: payload.values.stateId,\r\n      population: payload.values.population,\r\n      imageUrl: payload.values.imageURL,\r\n      visited: payload.values.visited ? true : false,\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n  payload.close();\r\n  yield put(citiesSlice.actions.fetchCities());\r\n}\r\nfunction* updateCityStatusSaga({ payload }) {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  yield call(\r\n    axios.put,\r\n    `/cities/${payload.id}`,\r\n    {\r\n      name: payload.name,\r\n      stateId: payload.state.id,\r\n      population: payload.population,\r\n      imageUrl: payload.imageUrl,\r\n      visited: true,\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n  yield put(citiesSlice.actions.fetchCities());\r\n}\r\n\r\nfunction* fetchStatesSaga() {\r\n  const { token } = yield select((state) => state.users.authData);\r\n  const response = yield call(axios.get, 'cities/states', {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  yield put(citiesSlice.actions.setStates(response.data.states));\r\n}\r\n\r\nfunction* fetchCitiesSaga() {\r\n  try {\r\n    const { userId, token } = yield select((state) => state.users.authData);\r\n    const response = yield call(axios.get, `cities/user/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    yield put(citiesSlice.actions.setCities(response.data.cities));\r\n  } catch (e) {\r\n    yield put(citiesSlice.actions.setError(e.response.data.message));\r\n  }\r\n}\r\n\r\nexport default function* citiesWatcher() {\r\n  yield takeLatest(citiesSlice.actions.fetchCities, fetchCitiesSaga);\r\n  yield takeLatest(citiesSlice.actions.updateCityStatus, updateCityStatusSaga);\r\n  yield takeLatest(citiesSlice.actions.updateCity, updateCitySaga);\r\n  yield takeLatest(citiesSlice.actions.fetchStates, fetchStatesSaga);\r\n  yield takeLatest(citiesSlice.actions.createCity, createCitySaga);\r\n  yield takeLatest(citiesSlice.actions.deleteCity, deleteCitySaga);\r\n}\r\n","import { takeLatest, call, put } from '@redux-saga/core/effects';\r\nimport usersSlice from './usersSlice';\r\nimport axios from '../../../API/index';\r\n\r\nfunction* fetchUsersSaga() {\r\n  try {\r\n    const response = yield call(axios.get, 'users');\r\n    yield put(usersSlice.actions.setUsers(response.data.users));\r\n  } catch (e) {\r\n    yield put(usersSlice.actions.setError(e.response.data.message));\r\n  }\r\n}\r\n\r\nfunction* loginSaga({ payload }) {\r\n  try {\r\n    const response = yield call(axios.post, 'users/login', payload);\r\n    yield put(usersSlice.actions.setToken(response.data));\r\n  } catch (e) {\r\n    yield put(usersSlice.actions.setError(e.response.data.message));\r\n  }\r\n}\r\nfunction* signUpSaga({ payload }) {\r\n  delete payload.confirmPassword;\r\n\r\n  try {\r\n    const response = yield call(axios.post, 'users/signup', payload);\r\n\r\n    yield put(usersSlice.actions.setToken(response.data));\r\n  } catch (e) {\r\n    yield put(usersSlice.actions.setError(e.response.data.message, e.response));\r\n  }\r\n}\r\n\r\nexport default function* usersWatcher() {\r\n  yield takeLatest(usersSlice.actions.fetchUsers, fetchUsersSaga);\r\n  yield takeLatest(usersSlice.actions.logIn, loginSaga);\r\n  yield takeLatest(usersSlice.actions.signUp, signUpSaga);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport citiesWatcher from '../features/cities/redux/citiesSagas';\r\nimport usersWatcher from '../features/users-list/redux/usersSagas';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([usersWatcher(), citiesWatcher()]);\r\n}\r\n","import createSagaMiddleware from '@redux-saga/core';\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport citiesSlice from '../features/cities/redux/citiesSlice';\n\nimport usersSlice from '../features/users-list/redux/usersSlice';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = configureStore({\n  reducer: combineReducers({\n    users: usersSlice.reducer,\n    cities: citiesSlice.reducer,\n  }),\n  middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\r\n\r\nexport default function FormInput({\r\n  handleChange,\r\n  name,\r\n  text,\r\n  handleBlur,\r\n  values,\r\n  touched,\r\n  errors,\r\n  styles,\r\n  placeholder,\r\n  type = 'text',\r\n}) {\r\n  return (\r\n    <div className={styles.inputContainer}>\r\n      <label htmlFor={name}>{text}</label>\r\n      <input\r\n        placeholder={placeholder}\r\n        type={type}\r\n        className=\"input\"\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        value={values}\r\n      />\r\n      {touched && errors && <p className={styles.error}>{errors}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Button = ({\r\n  route = '',\r\n  buttonText,\r\n  styles,\r\n  onClick = null,\r\n  disabled,\r\n  type,\r\n}) => {\r\n  return (\r\n    <NavLink\r\n      className={styles}\r\n      to={route}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      type={type}\r\n    >\r\n      {buttonText}\r\n    </NavLink>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport FormInput from '../../shared/components/FormInput';\r\nimport { RoutePath } from '../../routing/Routes';\r\nimport { Button } from '../../shared/components/Button';\r\nimport usersSlice from '../../users-list/redux/usersSlice';\r\n\r\nimport styles from './FormStyle.module.scss';\r\n\r\nexport const UserLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email('Must be valid email')\r\n      .required('Enter valid email'),\r\n    password: yup.string().required('Enter password').min(5),\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: 'auto' }}>\r\n      <h1>Login</h1>\r\n      <div className={styles.form}>\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          validateOnBlur\r\n          onSubmit={(values) => dispatch(usersSlice.actions.logIn(values))}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty,\r\n          }) => (\r\n            <div>\r\n              <div className={styles.form}>\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'email'}\r\n                  text={'Email'}\r\n                  placeholder={'Enter Email'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.email}\r\n                  touched={touched.email}\r\n                  errors={errors.email}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'password'}\r\n                  text={'Password'}\r\n                  placeholder={'Enter Password'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.password}\r\n                  touched={touched.password}\r\n                  errors={errors.password}\r\n                  styles={styles.error}\r\n                />\r\n                <Button\r\n                  route={RoutePath.CITIES}\r\n                  styles={styles.navItem}\r\n                  onClick={() => handleSubmit()}\r\n                  buttonText={'SUBMIT'}\r\n                  disabled={!isValid && !dirty}\r\n                  type={'submit'}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport { Button } from '../../shared/components/Button';\r\nimport FormInput from '../../shared/components/FormInput';\r\nimport { RoutePath } from '../../routing/Routes';\r\nimport usersSlice from '../../users-list/redux/usersSlice';\r\n\r\nimport styles from './FormStyle.module.scss';\r\n\r\nexport const UserSignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const validationSchema = yup.object().shape({\r\n    email: yup.string().email().required('Enter valid email'),\r\n    password: yup.string().required('Enter password').min(5),\r\n    confirmPassword: yup\r\n      .string()\r\n      .when('password', {\r\n        is: (val) => (val && val.length > 0 ? true : false),\r\n        then: yup\r\n          .string()\r\n          .oneOf([yup.ref('password')], 'Both password need to be the same'),\r\n      })\r\n      .required('Enter password confirmation'),\r\n    name: yup.string().required().min(1),\r\n    imageUrl: yup.string().required('Enter valid URL').url(),\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: 'auto' }}>\r\n      <h1>Sign Up</h1>\r\n      <div className={styles.form}>\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            name: '',\r\n            imageUrl: '',\r\n          }}\r\n          validateOnBlur\r\n          onSubmit={(values) => dispatch(usersSlice.actions.signUp(values))}\r\n          validationSchema={validationSchema}\r\n          values\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty,\r\n          }) => (\r\n            <div>\r\n              <div className={styles.form}>\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'email'}\r\n                  text={'Email'}\r\n                  placeholder={'Enter Email'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.email}\r\n                  touched={touched.email}\r\n                  errors={errors.email}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'password'}\r\n                  text={'Password'}\r\n                  placeholder={'Enter Password'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.password}\r\n                  touched={touched.password}\r\n                  errors={errors.password}\r\n                  styles={styles.error}\r\n                  type={'password'}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'confirmPassword'}\r\n                  text={'Confirm Password'}\r\n                  placeholder={'Enter Password'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.confirmPassword}\r\n                  touched={touched.confirmPassword}\r\n                  errors={errors.confirmPassword}\r\n                  styles={styles.error}\r\n                  type={'password'}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'name'}\r\n                  text={'Name'}\r\n                  placeholder={'Enter Name'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.name}\r\n                  touched={touched.name}\r\n                  errors={errors.name}\r\n                  styles={styles.error}\r\n                />\r\n                <FormInput\r\n                  handleChange={handleChange}\r\n                  name={'imageUrl'}\r\n                  text={'Image URL'}\r\n                  placeholder={'Enter Image URL'}\r\n                  handleBlur={handleBlur}\r\n                  values={values.imageUrl}\r\n                  touched={touched.imageUrl}\r\n                  errors={errors.imageUrl}\r\n                  styles={styles.error}\r\n                />\r\n                <Button\r\n                  route={RoutePath.CITIES}\r\n                  styles={styles.navItem}\r\n                  onClick={() => handleSubmit()}\r\n                  buttonText={'SUBMIT'}\r\n                  disabled={!isValid && !dirty}\r\n                  type={'submit'}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './useModal.module.scss';\r\n\r\nconst modalNode = document.querySelector('#modal');\r\n\r\nfunction useModal() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const backdropClickHandler = (e) => {\r\n    if (e.target.id === 'modalBackdrop') closeModal();\r\n  };\r\n\r\n  const renderModal = (Component, inputs, option) => {\r\n    if (!isModalOpen) return null;\r\n    return ReactDOM.createPortal(\r\n      <div\r\n        id=\"modalBackdrop\"\r\n        className={styles.backDrop}\r\n        onClick={backdropClickHandler}\r\n      >\r\n        <div className={styles.modal}>\r\n          <Component\r\n            styles={styles}\r\n            onClose={closeModal}\r\n            inputs={inputs}\r\n            option={option}\r\n          />\r\n        </div>\r\n      </div>,\r\n      modalNode\r\n    );\r\n  };\r\n\r\n  return { openModal, closeModal, renderModal };\r\n}\r\n\r\nexport default useModal;\r\n","import React from 'react';\r\n\r\nexport default function Checkbox({\r\n  handleChange,\r\n  name,\r\n  text,\r\n  handleBlur,\r\n  values,\r\n  touched,\r\n  errors,\r\n  styles,\r\n  placeholder,\r\n  type = 'text',\r\n}) {\r\n  return (\r\n    <div className={styles.checkbox}>\r\n      <input\r\n        placeholder={placeholder}\r\n        type={type}\r\n        className={styles.checkboxInput}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        checked={values}\r\n      />\r\n      <label htmlFor={name}>{text}</label>\r\n      {touched && errors && <p className={styles.error}>{errors}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Select({\r\n  handleChange,\r\n  name,\r\n  text,\r\n  handleBlur,\r\n  values,\r\n  touched,\r\n  errors,\r\n  styles,\r\n  placeholder,\r\n  states,\r\n}) {\r\n  return (\r\n    <div className={styles.formGroup}>\r\n      <label htmlFor={name}>{text}</label>\r\n      <select\r\n        placeholder={placeholder}\r\n        name={name}\r\n        id={name}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        className={styles.formControl}\r\n        value={values}\r\n      >\r\n        <option value=\"\" />\r\n        {states.map((option) => (\r\n          <option key={option.id}>{option.name}</option>\r\n        ))}\r\n      </select>\r\n      {touched && errors && <p className={styles.error}>{errors}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Checkbox from '../../shared/components/Checkbox';\r\nimport Select from '../../shared/components/Select';\r\nimport FormInput from '../../shared/components/FormInput';\r\nimport citiesSlice from '../../cities/redux/citiesSlice';\r\n\r\nimport styles from './Modal.module.scss';\r\n\r\nexport default function Modal({ onClose, inputs, option }) {\r\n  const { cities, states } = useSelector((state) => state.cities);\r\n  const dispatch = useDispatch();\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required('Enter name'),\r\n    state: yup.string().required('Choose state'),\r\n    population: yup.number().positive().required('Enter Population'),\r\n    imageURL: yup.string().url().required('Enter imageURL'),\r\n  });\r\n\r\n  const submitCity = (data) => {\r\n    cities.map((item) => {\r\n      if (item.name === data.name && item.state.name === data.state)\r\n        data.id = item.id;\r\n    });\r\n    states.map((item) => {\r\n      if (data.state === item.name) data.stateId = item.id;\r\n    });\r\n\r\n    option === 'edit'\r\n      ? dispatch(\r\n          citiesSlice.actions.updateCity({ values: data, close: onClose })\r\n        )\r\n      : dispatch(\r\n          citiesSlice.actions.createCity({ values: data, close: onClose })\r\n        );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Login</h1>\r\n      <Formik\r\n        initialValues={\r\n          inputs\r\n            ? {\r\n                name: inputs.name,\r\n                state: inputs.state.name,\r\n                population: inputs.population,\r\n                imageURL: inputs.imageUrl,\r\n                visited: inputs.visited,\r\n              }\r\n            : {\r\n                name: '',\r\n                state: '',\r\n                population: '',\r\n                imageURL: '',\r\n                visited: '',\r\n              }\r\n        }\r\n        validateOnBlur\r\n        onSubmit={(values) => submitCity(values)}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          isValid,\r\n          handleSubmit,\r\n          dirty,\r\n        }) => (\r\n          <div>\r\n            <div className={styles.form}>\r\n              <div className={styles.modalHead}>CREATE CITY</div>\r\n              <FormInput\r\n                handleChange={handleChange}\r\n                name={'name'}\r\n                text={'Name'}\r\n                placeholder={'Enter Name'}\r\n                handleBlur={handleBlur}\r\n                values={values.name}\r\n                touched={touched.name}\r\n                errors={errors.name}\r\n                styles={styles}\r\n              />\r\n\r\n              <Select\r\n                states={states}\r\n                handleChange={handleChange}\r\n                name={'state'}\r\n                text={'State'}\r\n                type={'select'}\r\n                placeholder={'Select'}\r\n                handleBlur={handleBlur}\r\n                values={values.state}\r\n                touched={touched.state}\r\n                errors={errors.state}\r\n                styles={styles}\r\n              />\r\n\r\n              <FormInput\r\n                handleChange={handleChange}\r\n                name={'population'}\r\n                text={'Population'}\r\n                placeholder={'Enter Population'}\r\n                handleBlur={handleBlur}\r\n                values={values.population}\r\n                touched={touched.population}\r\n                errors={errors.population}\r\n                styles={styles}\r\n              />\r\n              <FormInput\r\n                handleChange={handleChange}\r\n                name={'imageURL'}\r\n                text={'Image URL'}\r\n                placeholder={' Image URL'}\r\n                handleBlur={handleBlur}\r\n                values={values.imageURL}\r\n                touched={touched.imageURL}\r\n                errors={errors.imageURL}\r\n                styles={styles}\r\n              />\r\n              <Checkbox\r\n                className={styles.checkbox}\r\n                type={'checkbox'}\r\n                handleChange={handleChange}\r\n                name={'visited'}\r\n                text={'Visited'}\r\n                handleBlur={handleBlur}\r\n                values={values.visited}\r\n                touched={touched.visited}\r\n                errors={errors.visited}\r\n                styles={styles}\r\n              />\r\n              <button\r\n                className={styles.button}\r\n                onClick={() => handleSubmit()}\r\n                disabled={!isValid && !dirty}\r\n                type={'submit'}\r\n              >\r\n                SUBMIT\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport citiesSlice from '../../cities/redux/citiesSlice';\r\nimport useModal from '../../shared/hooks/useModal';\r\nimport Modal from '../components/Modal';\r\n\r\nimport styles from './AdminStyles.module.scss';\r\n\r\nexport const CitiesAdmin = () => {\r\n  const { cities } = useSelector((state) => state.cities);\r\n  const { openModal, renderModal } = useModal();\r\n  const [city, setCity] = useState();\r\n  const [option, setOption] = useState('create');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(citiesSlice.actions.fetchCities());\r\n    dispatch(citiesSlice.actions.fetchStates());\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(citiesSlice.actions.deleteCity(id));\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    setCity();\r\n    openModal();\r\n    setOption('create');\r\n  };\r\n\r\n  const handleEdit = (item) => {\r\n    setOption('edit');\r\n    setCity(item);\r\n    openModal();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1>Admin</h1>\r\n      <div onClick={handleCreate} className={styles.button}>\r\n        CREATE NEW CITY\r\n      </div>\r\n      {cities.map((item) => (\r\n        <div className={styles.container} key={item.id}>\r\n          <div className={styles.name}>{item.name}</div>\r\n          <div>\r\n            <div onClick={() => handleEdit(item)} className={styles.button}>\r\n              EDIT\r\n            </div>\r\n            <div\r\n              onClick={() => handleDelete(item.id)}\r\n              className={styles.button}\r\n            >\r\n              DELETE\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {renderModal(Modal, city, option)}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport styles from './UserStyle.module.scss';\r\n\r\nfunction User({ item }) {\r\n  return (\r\n    <div className={styles.userWrapper}>\r\n      <div className={styles.thumb}>\r\n        <img src={item.imageUrl} alt={item.name} />\r\n      </div>\r\n      <div className={styles.info}>\r\n        <div className={styles.name}>{item.name}</div>\r\n        <span>\r\n          Cities visited:\r\n          <span className={styles.visited}>{item.citiesVisited}</span>\r\n        </span>\r\n        <span>\r\n          Cities total: <span className={styles.total}>{item.citiesTotal}</span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport User from '../components/User';\r\nimport usersSlice from '../redux/usersSlice';\r\n\r\nexport default function UsersList() {\r\n  const { loading, error, users } = useSelector((state) => state.users);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(usersSlice.actions.fetchUsers());\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      <div>\r\n        {users.map((item) => (\r\n          <User item={item} key={item.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport citiesSlice from '../redux/citiesSlice';\r\n\r\nimport styles from './cityStyle.module.scss';\r\n\r\nexport default function City({ item }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickVisited = (item) => {\r\n    const city = { ...item };\r\n    city.visited = true;\r\n    dispatch(citiesSlice.actions.updateCityStatus(item));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.userWrapper}>\r\n      <div className={styles.thumb}>\r\n        <img src={item.imageUrl} alt={item.name} />\r\n      </div>\r\n      <div className={styles.info}>\r\n        <div className={styles.name}>{item.name}</div>\r\n        <span>\r\n          State:\r\n          <span className={styles.state}>{item.state.name}</span>\r\n        </span>\r\n        <span>\r\n          Population:{' '}\r\n          <span className={styles.population}>\r\n            {item.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <div\r\n        className={\r\n          !item.visited\r\n            ? styles.button\r\n            : `${styles.button} ${styles.hiddenButton}`\r\n        }\r\n        disabled={false}\r\n        onClick={() => handleClickVisited(item)}\r\n      >\r\n        {item.visited ? 'VISITED' : 'MAKE VISITED'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport City from '../components/City';\r\nimport citiesSlice from '../redux/citiesSlice';\r\n\r\nexport default function Cities() {\r\n  useEffect(() => {\r\n    dispatch(citiesSlice.actions.fetchCities());\r\n  }, []);\r\n\r\n  const { loading, error, cities } = useSelector((state) => state.cities);\r\n  const dispatch = useDispatch();\r\n\r\n  if (loading) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Cities</h1>\r\n      <div>\r\n        {cities.map((item) => (\r\n          <City item={item} key={item.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { UserLogin } from '../auth/views/UserLogin';\r\nimport { UserSignUp } from '../auth/views/UserSignUp';\r\nimport { CitiesAdmin } from '../admin/views/CitiesAdmin';\r\nimport UsersList from '../users-list/views/UsersList';\r\nimport Cities from '../cities/views/Cities';\r\n\r\nexport const RoutePath = {\r\n  USERS: '/users',\r\n  USERS_LOGIN: '/users/login',\r\n  USERS_SIGN_UP: '/users/signup',\r\n  CITIES: '/cities',\r\n  CITIES_ADMIN: '/cities/admin',\r\n};\r\n\r\nfunction Routes({ isAuthorized }) {\r\n  if (isAuthorized)\r\n    return (\r\n      <Switch>\r\n        <Route path={RoutePath.CITIES_ADMIN} component={CitiesAdmin} />\r\n        <Route path={RoutePath.CITIES} component={Cities} />\r\n        <Redirect to={RoutePath.CITIES} />\r\n      </Switch>\r\n    );\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={RoutePath.USERS_LOGIN} component={UserLogin} />\r\n      <Route path={RoutePath.USERS_SIGN_UP} component={UserSignUp} />\r\n      <Route path={RoutePath.USERS} component={UsersList} />\r\n      <Redirect to={RoutePath.USERS} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport usersSlice from '../../users-list/redux/usersSlice';\r\nimport { RoutePath } from '../../routing/Routes';\r\nimport { Button } from '../../shared/components/Button';\r\n\r\nimport styles from './NavBar.module.scss';\r\n\r\nexport default function NavBar({ isAuthorized }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleResetAutorisation = () => {\r\n    dispatch(usersSlice.actions.logOut());\r\n  };\r\n\r\n  return (\r\n    <nav className={styles.navbarContainer}>\r\n      <div className={styles.banner}>US CITIES</div>\r\n      <div>\r\n        {!isAuthorized && (\r\n          <>\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={RoutePath.USERS_LOGIN}\r\n              buttonText={'LOGIN'}\r\n            />\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={RoutePath.USERS_SIGN_UP}\r\n              buttonText={'SIGN UP'}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {isAuthorized && (\r\n          <>\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={RoutePath.CITIES}\r\n              buttonText={'CITIES'}\r\n            />\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={RoutePath.CITIES_ADMIN}\r\n              buttonText={'ADMIN'}\r\n            />\r\n            <Button\r\n              styles={styles.navItem}\r\n              route={'sign_out'}\r\n              buttonText={'SIGN OUT'}\r\n              onClick={handleResetAutorisation}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport NavBar from './features/navbar/views/NavBar';\nimport Routes from './features/routing/Routes';\n\nimport styles from './App.module.scss';\n\nfunction App() {\n  const { token } = useSelector((state) => state.users.authData);\n\n  return (\n    <>\n      <header className={styles.header}>\n        <NavBar isAuthorized={!!token} />\n      </header>\n      <main className={styles.main}>\n        <Routes isAuthorized={!!token} />\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"NavBar_navbarContainer__1Zsu9\",\"banner\":\"NavBar_banner__1wa-w\",\"navItem\":\"NavBar_navItem__1wBhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AdminStyles_wrapper__NMkzM\",\"button\":\"AdminStyles_button__1C-hP\",\"container\":\"AdminStyles_container__294Uh\",\"name\":\"AdminStyles_name__2KFt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"UserStyle_userWrapper__1X3es\",\"thumb\":\"UserStyle_thumb__3v7e2\",\"info\":\"UserStyle_info__1bA6k\",\"name\":\"UserStyle_name__plv6O\",\"visited\":\"UserStyle_visited__tpOu7\",\"total\":\"UserStyle_total__1CCCs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backDrop\":\"useModal_backDrop__Usw1S\",\"modal\":\"useModal_modal__1vnfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__Yc8Ft\"};"],"sourceRoot":""}